#!/bin/sh
#
# Helper script for delploy binary on M$ Windows.
#
# Copyright 2012 @ Kyan <kyan.ql.he@gmail.com>
#
# @author Kyan <kyan.ql.he@gmail.com>
# @date Fri, Jan 06, 2012 11:31:07 AM
#
# TODO: args: [dest_dir] support.

CP=""
DLLS=""
FULLPATH_DLLS=""
EXE=""
TEMP_DIR=""
PKG_NAME=""
USE_OBJDUMP=""

USAGE="Usage: deploy-exe [--objdump] executable [dest_dir]"
CP=/bin/cp

# Validate args.
if [ "$1" = "--objdump" ];
then
    USE_OBJDUMP="on";
    shift
else
    USE_OBJDUMP="off";
fi

if [ $# -gt 2 -o $# -lt 1 ];
then
    echo $USAGE
    exit
fi

EXE=$1

# Find dlls depend.
# ldd sucks.
DLLS=$(ldd $EXE | awk '{ print $3 }' | grep -vi "/WINDOWS/system32/")

# Append dlls detected by objdump
if [ $USE_OBJDUMP = "on" ];
then
    echo "Finding dependencies with objdump"
    DLLS=$(objdump.exe -x debug/vidgui.exe | /bin/grep "DLL Name:" | awk '{ print $3 }')$DLLS
fi

for dll in $DLLS;
do
    _dll=$(which $dll 2>&1)

    if [ ! $? -eq 0 ];
    then
        echo "`basename $dll` cannot found."
        continue
    fi

    if [[ $_dll =~ .*/system32/.* ]];
    then
        echo "ignore $_dll"
        continue
    fi

    FULLPATH_DLLS="$FULLPATH_DLLS $_dll"
done

# Remove duplicate dlls
FULLPATH_DLLS=$(echo $FULLPATH_DLLS | tr -s [:space:] \\n | sort | uniq)

# Create TMP_DIR>
TEMP_DIR=$(mktemp -d .deploy-exe.XXXXXX)

# Copy all dependency.
for dll in $FULLPATH_DLLS;
do
    echo "Packaging `basename $dll`"
    $CP $dll $TEMP_DIR/

done

# Copy app itself.
$CP $EXE $TEMP_DIR/

PKG_NAME=${EXE%.exe}_$(date "+%Y-%m-%d_%H-%M-%S").tar.gz
PKG_NAME=`basename $PKG_NAME`

tar cfz $PKG_NAME $TEMP_DIR/*

rm -rf $TEMP_DIR

# Clean vars.
unset CP EXE TEMP_DIR PKG_NAME
